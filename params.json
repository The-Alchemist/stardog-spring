{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Stardog-spring","tagline":"Spring integration with Stardog RDF database","body":"*Spring for Stardog*\r\n\r\nThis is Spring integration for Stardog, the RDF database. See\r\nhttp://stardog.com/docs/spring for more information, when it's ready.\r\n\r\nCurrent build / install instructions:\r\n\r\nNote: Gradle Eclipse plugin (e.g. in SpringSource Tool Suite does not honor JVM parameters.\r\n      Work around is to drop stardog license file in the stardog-spring workspace folder itself.\r\n\r\n - Edit build.gradle and change the stardogLocation variable (line 18) \r\n   to a local Stardog release directory\r\n - Don't forget to set an environment variable or JVM parameter for stardog home\r\n - As of Stardog 0.9.6, don't forget to get your license and drop it in stardog home\r\n - Run \"gradlew\", this will download gradle and fully bootstrap a gradle\r\n   build environment\r\n - Run \"gradlew build\", which will resolve dependencies, compile, and\r\n   package everything up.  The resulting stardog-spring.jar is then in the\r\n   build/libs directory.\r\n - Run \"gradlew install\", which will perform the build, generate a POM, and\r\n   install that POM in your local maven repo.  However, this POM will not contain\r\n   any of the stardog dependencies - only the Spring dependencies.  We can \r\n   change this once a Stardog pom exists.\r\n\r\nIf you aren't a Stardog user or customer, you won't be able to\r\ncompile Spring for Stardog. Please see http://stardog.com/ for more information.\r\n","google":""}